Next steps
* generally
    * design for the default case of how you will use it
    * add a bit of comment for decision decisions
    * KEEP IT SIMPLE and get it finished
* starndardize text and keys, add a bit of meme text, why not
* make logging default to log.txt, maybe add a separate flag to disable logging
* error pages
    * instead of showing detailed errors can also just give the bare minimum and refer to logs, that is probably easier because usually things shouldn't go wrong
        * especially when commands go wrong -> think about it again
    * make that "ups, something went wrong"
    * look at viewport example again to add the border and progress indicator and co
    * alternative for error page would be to open stdout and stderr output in less/more
* zip error display?
* think about dir selection again if it is the right workflow or we missed any sanity checks or similar?


* what about testing?
    * we could e.g. create a GitHubApi interface that defines method to return the commands
        * we could have that as a field on Model
        * for testing we can use a mock or similar
        * this would be useful especially for interactive testing
* update readme
* how to do a "progress report"
	* e.g. if you run a command like an external program that runs some time and u want to emit multiple messages from there?
		* is there an example for this? or somebody probably asked this before -> google




without TUI
* we could also add a command that does everything based on the config file automatically, like a script
* would need to refactor some of the command code, in particular those that run background commands, so that it can be used by 
    both terminal ui and script
* but that shouldn't be hard at all
* just need to think about what we output and log
    * e.g. do we log everything to a file
    * what about command outputs like for a git clone command, print this or run in the background and only output if there is an error
        * yeah only outputting when there is an error is probably the way
