Next steps
* generally -> add a bit of comment for decision decisions
* make styles a global var? would be easier don't have to pass stuff around
* should we maybe use separate packages instead, it is kind of tedious to add qualifiers to every name?
    * do it like this for now, if there are not too many problems maybe keep it?
    * whatever you do note down what you did and the reasoning
    * one problem is e.g. also zip state constant and zip function
    * only thing that wouldn't work is the commonState but there can probably be a solution for this? either in separate package or just pass arguments normally
    * passing arguments wouldn't be too hard
* error pages
    * create a command error page similar to the ex we have right now
        * show command that was run and output of stdout and stderr + exit code and error if running it failed
        * need to put a bit of effort into making it look nice
            * can we set hieight of view dynamicylla based on content e.g. max 10 lines but if it is smaller we show less
        * look at viewport example again to add the border and progress indicator and co
* refactor github
    * maybe it is easier to do it via api, just create a token for backup and store it in a file, can then easily get repo and only need git as dependency not github cli, yes this is probably better
    * but can we get api access easily with a token thingy? and can we then use that same token to also clone a repo?
    * it is possible, you can look up the permissions needed
        * create a fine-grained personal access token
        * using that can query the api and also download directly a zip or tar or you git clone
        * if you git clone you need to enter the token as a password, but that might be stored in history -> when doing it programatically you can maybe instead overwrite stdin to contain the token + a enter so the password is entered automatically
* zip works but still some todos to make it look nicer and fix the small bugs and things and make code a bit better
* think about dir selection again if it is the right workflow or we missed any sanity checks or similar?
* pretty
	* did anything change in the lipgloss package?
    * do we do top level padding/margin or each model gets the full screen?
    * dir selection from top to bottom
* what about testing?
* update readme
    * note that menu.go contains comment on how to add a new component
* how to do a "progress report"
	* e.g. if you run a command like an external program that runs some time and u want to emit multiple messages from there?
		* is there an example for this? or somebody probably asked this before -> google
